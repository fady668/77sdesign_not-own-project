openapi: 3.0.3
info:
  title: 77s Design API
  version: '1.0'
  description: 77s Design API Docs
paths:
  /{version}/user/confirm-email/{email}/{token}:
    get:
      operationId: user_confirm_email_retrieve
      parameters:
      - in: path
        name: email
        schema:
          type: string
        required: true
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRegister'
          description: ''
  /{version}/user/login/:
    post:
      operationId: user_login_create
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRegister'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRegister'
          description: ''
  /{version}/user/profile/client/:
    get:
      operationId: user_profile_client_retrieve
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    post:
      operationId: user_profile_client_create
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    put:
      operationId: user_profile_client_update
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientProfile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
    patch:
      operationId: user_profile_client_partial_update
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClientProfile'
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
          description: ''
  /{version}/user/profile/designer/:
    post:
      operationId: user_profile_designer_create
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignerProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DesignerProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DesignerProfile'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignerProfile'
          description: ''
  /{version}/user/register/:
    post:
      operationId: user_register_create
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRegister'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRegister'
          description: ''
  /{version}/user/social/facebook-auth/:
    post:
      operationId: user_social_facebook_auth_create
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleAuth'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAuth'
          description: ''
  /{version}/user/social/google-auth/:
    post:
      operationId: user_social_google_auth_create
      parameters:
      - in: path
        name: version
        schema:
          type: string
          pattern: ^(v1.0)$
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleAuth'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleAuth'
          description: ''
components:
  schemas:
    ClientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firstname:
          type: string
          maxLength: 50
        lastname:
          type: string
          maxLength: 50
        country:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 20
        timezone:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 50
        zip_code:
          type: string
          maxLength: 30
        phone:
          type: string
          maxLength: 50
        languages:
          type: string
          maxLength: 50
        bio:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        user:
          type: integer
      required:
      - address
      - bio
      - city
      - country
      - firstname
      - id
      - languages
      - lastname
      - phone
      - state
      - timezone
      - user
      - zip_code
    DesignerProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        avatar:
          type: string
          format: uri
        firstname:
          type: string
          maxLength: 50
        lastname:
          type: string
          maxLength: 50
        country:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 20
        timezone:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 50
        zip_code:
          type: string
          maxLength: 30
        phone:
          type: string
          maxLength: 50
        languages:
          type: string
          maxLength: 50
        bio:
          type: string
        gender:
          $ref: '#/components/schemas/GenderEnum'
        birth_date:
          type: string
          format: date
        available:
          type: boolean
        notify:
          type: boolean
        email_comments_messages:
          type: boolean
        email_remind_deadlines:
          type: boolean
        email_winner:
          type: boolean
      required:
      - address
      - avatar
      - bio
      - birth_date
      - city
      - country
      - firstname
      - gender
      - id
      - languages
      - lastname
      - phone
      - state
      - timezone
      - user
      - zip_code
    GenderEnum:
      enum:
      - M
      - F
      type: string
    GoogleAuth:
      type: object
      properties:
        auth_token:
          type: string
          writeOnly: true
          maxLength: 255
      required:
      - auth_token
    LoginRegister:
      type: object
      properties:
        username:
          type: string
          readOnly: true
          maxLength: 150
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - password
      - username
    PatchedClientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firstname:
          type: string
          maxLength: 50
        lastname:
          type: string
          maxLength: 50
        country:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 20
        timezone:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 50
        zip_code:
          type: string
          maxLength: 30
        phone:
          type: string
          maxLength: 50
        languages:
          type: string
          maxLength: 50
        bio:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        user:
          type: integer
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        date_joined:
          type: string
          format: date-time
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          nullable: true
          maxLength: 150
        is_active:
          type: boolean
        is_staff:
          type: boolean
        is_verified:
          type: boolean
      required:
      - email
      - id
      - password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
