# Generated by Django 4.2.4 on 2023-09-06 14:20

import contest.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0013_designstyle_designstylesample"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("languages", models.CharField(max_length=150)),
                ("description", models.TextField()),
                ("url", models.URLField()),
                ("reference", models.URLField()),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="contest_logos/"
                    ),
                ),
                ("portfolio_allowed", models.BooleanField(default=True)),
                ("size", models.CharField(blank=True, max_length=50, null=True)),
                ("feature_text", models.TextField(blank=True, null=True)),
                (
                    "classic_to_modern",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "playful_to_serious",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "geometrical_to_organic",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "feminine_to_masculine",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "economical_to_luxurious",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "mature_to_youthful",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "handcrafted_to_minimalist",
                    models.SmallIntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPENED", "Opened"),
                            ("CANCELLED", "Cancelled"),
                            ("COMPLETED", "Completed"),
                        ],
                        default="OPENED",
                        max_length=9,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("round_one_start_date", models.DateTimeField()),
                ("round_one_end_date", models.DateTimeField()),
                (
                    "round_one_status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("STOPPED", "Stopped")],
                        default="PENDING",
                        max_length=8,
                    ),
                ),
                ("round_two_start_date", models.DateTimeField(blank=True, null=True)),
                ("round_two_end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "round_two_status",
                    models.CharField(
                        blank=True,
                        choices=[("PENDING", "Pending"), ("STOPPED", "Stopped")],
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "contest_extension",
                    models.CharField(
                        blank=True,
                        choices=[("DAY", "Day"), ("TWO_DAYS", "Two Days")],
                        max_length=9,
                        null=True,
                    ),
                ),
                ("guarantee", models.BooleanField(default=False)),
                ("promote_to_top", models.BooleanField(default=False)),
                ("NDA", models.BooleanField(default=False)),
                ("blind", models.BooleanField(default=False)),
                ("urgent", models.BooleanField(default=False)),
                ("is_listed", models.BooleanField(default=True)),
                ("released", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(editable=False)),
                ("updated_at", models.DateTimeField(editable=False)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="core.category"
                    ),
                ),
                (
                    "color_palette",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.colorpalette",
                    ),
                ),
                (
                    "industry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="core.industry"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-promote_to_top", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ContestSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(editable=False)),
                ("updated_at", models.DateTimeField(editable=False)),
                ("is_winner", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "contest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contest.contest",
                    ),
                ),
                (
                    "designer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField()),
                (
                    "price_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EGP", "EGP â‚¬"), ("USD", "USD $")],
                        default="USD",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "price",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2, default_currency="USD", max_digits=10
                    ),
                ),
                (
                    "eligible_designers",
                    models.CharField(
                        choices=[
                            ("ALL", "All"),
                            ("MIDDLE", "Middle"),
                            ("ADVANCED", "Advanced"),
                        ],
                        max_length=20,
                    ),
                ),
                ("priority_support", models.BooleanField(default=False)),
                ("number_of_entries", models.PositiveIntegerField(default=0)),
                ("dedicated_director", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ContestSubmissionImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="contest_submission_images/")),
                (
                    "contest_submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contest.contestsubmission",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContestRound",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "contest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contest.contest",
                    ),
                ),
                ("finalists", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="ContestInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("DECLINED", "Declined"),
                        ],
                        default="PENDING",
                        max_length=8,
                    ),
                ),
                (
                    "contest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contest.contest",
                        validators=[contest.models.limit_invitations],
                    ),
                ),
                (
                    "designer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="contest",
            name="package",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT, to="contest.package"
            ),
        ),
        migrations.AddField(
            model_name="contest",
            name="round_one_finalists",
            field=models.ManyToManyField(
                related_name="round_one_finalists", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="contest",
            name="round_two_finalists",
            field=models.ManyToManyField(
                related_name="round_two_finalists", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="LogoContest",
            fields=[
                (
                    "contest_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="contest.contest",
                    ),
                ),
                ("design_styles", models.ManyToManyField(to="core.designstyle")),
            ],
            bases=("contest.contest",),
        ),
        migrations.AddConstraint(
            model_name="contestsubmission",
            constraint=models.UniqueConstraint(
                fields=("contest", "designer"), name="unique_contest_submission"
            ),
        ),
        migrations.AddConstraint(
            model_name="contestsubmission",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_winner", True)),
                fields=("contest",),
                name="unique_contest_winner",
            ),
        ),
        migrations.AddConstraint(
            model_name="contestinvitation",
            constraint=models.UniqueConstraint(
                fields=("contest", "designer"), name="unique_contest_invitation"
            ),
        ),
    ]
